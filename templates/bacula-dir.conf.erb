#
# Managed by puppet
#

Director {
  Name = <%= scope.lookupvar('bacula::director_label') %>
  DIRport = 9101                                                            # where we listen for UA connections
  QueryFile = "/etc/bacula/query.sql"
  WorkingDirectory = "/var/spool/bacula"
  PidDirectory = "/var/run"
  Maximum Concurrent Jobs = 1
  Password = "<%= scope.lookupvar('bacula::director_password') %>"  # console password
  Messages = Daemon
}

Catalog {
  Name = MyCatalog
  dbname = <%= scope.lookupvar('bacula::dbname') %>; 
  user = <%= scope.lookupvar('bacula::dbuser') %>; 
  password = "<%= scope.lookupvar('bacula::dbpassword') %>";
}

Storage {
  Name = File
  # N.B. Use a fully qualified name here
  Address = <%= scope.lookupvar('bacula::storage_server') %>.<%= domain %>
  SDPort = 9103
  Password = "<%= scope.lookupvar('bacula::storage_password') %>"
  Device = FileStorage
  Media Type = File
}

Pool {
  Name = Default
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
}

Messages {
  Name = Standard
#
# NOTE! If you send to two email or more email addresses, you will need
#  to replace the %r in the from field (-f part) with a single valid
#  email address in both the mailcommand and the operatorcommand.
#  What this does is, it sets the email address that emails would display
#  in the FROM field, which is by default the same email as they're being
#  sent to.  However, if you send email to more than one address, then
#  you'll have to set the FROM address manually, to a single address. 
#  for example, a 'no-reply@mydomain.com', is better since that tends to
#  tell (most) people that its coming from an automated source.

  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) %r\" -s \"Bacula: %t %e of %c %l\" %r"
  operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) %r\" -s \"Bacula: Intervention needed for %j\" %r"
  mail = <%= scope.lookupvar('bacula::admin_email') %> = all, !skipped            
  operator = <%= scope.lookupvar('bacula::operator_email') %> = mount
  console = all, !skipped, !saved
  append = "/var/spool/bacula/log" = all, !skipped
}

Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) %r\" -s \"Bacula daemon message\" %r"
  mail = root@localhost = all, !skipped            
  console = all, !skipped, !saved
  append = "/var/log/bacula.log" = all, !skipped
}

Schedule {
  Name = "LinuxOSCycle"
  Run = Full 1st sun at 12:20
  Run = Full sun-sat at 14:00
  #Run = Full 1st sun at 23:05
  #Run = Differential 2nd-5th sun at 23:05
  #Run = Incremental mon-sat at 23:05
}

Schedule {
  Name = "LinuxDataCycle"
  Run = Full 1st sun at 12:20
  Run = Full sun-sat at 14:00
  #Run = Full 1st sun at 23:05
  #Run = Differential 2nd-5th sun at 23:05
  #Run = Incremental mon-sat at 23:05
}

Schedule {
  Name = "WeeklyCycle"
  Run = Full sun-sat at 12:20
  Run = Full sun-sat at 14:00
  #Run = Full 1st sun at 23:05
  #Run = Differential 2nd-5th sun at 23:05
  #Run = Incremental mon-sat at 23:05
}

Schedule {
  Name = "WeeklyCycleAfterBackup"
  Run = Full sun-sat at 12:25
}

Job {
  Name = "BackupCatalog"
  Type = Backup
  Storage = File
  Client = <%= scope.lookupvar('bacula::director_server') %>-fd
  Messages = Standard
  Pool = Default
  Level = Full
  FileSet = "Catalog"
  Schedule = "WeeklyCycleAfterBackup"
  # This creates an ASCII copy of the catalog
  RunBeforeJob = "/usr/libexec/bacula/make_catalog_backup <%= scope.lookupvar('bacula::dbname') %> <%= scope.lookupvar('bacula::dbuser') %> <%= scope.lookupvar('bacula::dbpassword') %> <%= scope.lookupvar('bacula::dbhost') %>"
  # This deletes the copy of the catalog
  RunAfterJob  = "/usr/libexec/bacula/delete_catalog_backup"
  Write Bootstrap = "/var/spool/bacula/BackupCatalog.bsr"
  Priority = 11                                                               # run after main backup
}

JobDefs {
	Name = "DefaultJob"
	Type = Backup
	Level = Incremental
	FileSet = "FullSet"
	Schedule = "WeeklyCycle"
	Storage = File
	Messages = Standard
	Pool = Default
	Priority = 10
}

@|"sh -c 'for f in /etc/bacula/clients.d/*.conf ; do echo @${f} ; done'"
@|"sh -c 'for f in /etc/bacula/filesets.d/*.conf ; do echo @${f} ; done'"
@|"sh -c 'for f in /etc/bacula/schedules.d/*.conf ; do echo @${f} ; done'"
